
.form {
    width: 100%;
}

.form input[type="text"] {
    padding: .8rem 3rem;
    border-radius: 5px;
    border: 1px solid var(--grey-color-5);
    flex: 0 50%;
    font-size: 1.4rem;
}

.form input[type='text']::placeholder {
    font-size: 1.4rem;;
}

.form input[type='text']:focus {
    border: 1px solid var(--grey-color-2);
}
 /* Customize the label (the container) */
 .inputRadioControl {
    display: block;
    position: relative;
    padding-left: 35px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  .inputRadioControl:last-child {
      margin-left: 2rem;
  }
  /* Hide the browser's default radio button */
  .inputRadioControl input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 2.5rem;
    width: 2.5rem;
    left: -.5rem;
    top: -.8rem;
    z-index: 5000;
  }
  
  /* Create a custom radio button */
  .checkmark {
    position: absolute;
    top: -.5rem;
    left: 0;
    height: 25px;
    width: 25px;
    background-color: var(--white-color);
    border: 1px solid var(--grey-color-5);
    border-radius: 50%;
    transition: .2s background-color ease-in-out;
  }
  
  /* On mouse-over, add a grey background color */
  .inputRadioControl:hover input ~ .checkmark {
    background-color: var(--grey-color-5);
    transition: .2s background-color ease-in-out;
  }
  
  /* When the radio button is checked, add a blue background */
  .inputRadioControl input:checked ~ .checkmark {
    background-color: white;
    border: 1px solid var(--green-color-1);
  }
  
  /* Create the indicator (the dot/circle - hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }
  
  /* Show the indicator (dot/circle) when checked */
  .inputRadioControl input:checked ~ .checkmark:after {
    display: block;
  }
  
  /* Style the indicator (dot/circle) */
  .inputRadioControl .checkmark:after {
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background:var(--green-color-1);
  }

  .calendarContainer input {
    padding: .8rem 3rem;
    border-radius: 5px;
    border: 1px solid var(--grey-color-5);
    font-size: 1.4rem;
    cursor: pointer;
  }

  .calendarContainer input::placeholder {
    font-size: 1.4rem;
  }

.formPlace {
    padding:.9rem 1rem;
    border-right: 3px;
    border: 1px solid var(--grey-color-5);
    background-color: white;
    flex: 0 50%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 1.4rem;
    border-radius: 5px;
    cursor: pointer;
}

.inputControlContainer {
    position: relative;
}

.inputControlContainer:first-child .inputControl:first-child input {
    border-right: none;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
}

.inputControlContainer:first-child .inputControl:last-child input {
    border-top-left-radius: 0px;
    border-bottom-left-radius: 0px;
    border-left: none;
    padding-left: 4rem;
}

.inputControlContainer:first-child .inputControl:last-child svg {
    left:2rem;
}

.inputControlContainer:last-child {
    display: flex;
}

.inputControl {
    position: relative;
}

.inputControl:last-child button {
    background-color: var(--green-color-1);
    padding:.9rem 1.2rem;
    margin-top: 2rem;
    border-radius: 3px;
    color: var(--white-color);
    font-weight: 700;
    transition: background-color .2s ease-in-out;
}

.inputControl:last-child button:hover {
    background-color: var(--green-color-2);
}

.formIcons {
    position: absolute;
    top: 50%;
    left: 1rem;
    fill: var(--grey-color-3);
    width: 2rem;
    height: 2rem;
}

.formLabel {
    display: block;
    margin-bottom: .5rem;
}